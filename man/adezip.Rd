% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archives.R
\name{adezip}
\alias{adezip}
\alias{adezip.pm_param}
\alias{adezip.default}
\title{~ *.zip - Identifie et dezippe des fichiers de l'archive PMSI}
\usage{
adezip(...)

\method{adezip}{pm_param}(.params, ...)

\method{adezip}{default}(finess, annee, mois, path, liste = NULL,
  pathto = path, type = "in", recent = TRUE, nom_archive = NULL,
  quiet = FALSE, ...)
}
\arguments{
\item{...}{Paramètres supplémentaires. Permet par exemple de changer un des paramètres après avoir passé un noyau de paramètres sans changer le noyau de paramètres.}

\item{.params}{Un noyau de paramètres définis par la fonction fonction \code{\link{noyau_pmeasyr}}}

\item{finess}{Finess de l'archive.}

\item{annee}{Année de l'archive.}

\item{mois}{Mois de l'archive.}

\item{path}{Chemin d'accès au répertoire contenant l'archive à décompresser}

\item{liste}{Vecteur de caractère avec le type de fichiers à dézipper (ex: ano, rss, rsa, dmi, ...). Par défaut, \code{liste = ""} dezippe la totalite de l'archive.}

\item{pathto}{Par defaut la même valeur que \code{path}, dézipper dans le même répertoire que l'archive, sinon préciser le chemin ou dezipper les fichiers dans le répertoire indiqué par \code{pathto}.}

\item{type}{Type de l'archive : \emph{in} ou \emph{out}.}

\item{recent}{par défaut \code{TRUE}, l'archive la plus recente sera utilisee, sinon propose à l'utilisateur de choisir quelle archive dezipper}

\item{nom_archive}{Nom de l'archive à décompresser dans le dossier \code{path}. Par défaut, \code{NULL}, n'utilise pas ce paramètre. Si le chemin est spécifié, alors les paramètres \code{finess}, \code{annee}, \code{mois} et \code{recent} ne sont pas utilisés.}

\item{quiet}{Affichage d'un message au dézippage \code{TRUE} / \code{FALSE}}
}
\value{
Les chemins d'accès des fichiers décompressés, de manière invisible.
}
\description{
Recherche et dezippe (décompresse) les fichiers contenus dans une archive \emph{*.in} ou \emph{*.out} du PMSI en fonction de parametres.
}
\details{
Il est possible de passer directement les paramètres permettant d'identifier l'archive à dézipper (méthode par défaut) ou à l'aide de paramètres enregistrés dans un noyau de paramètres (voir fonction \code{\link{noyau_pmeasyr}}).
}
\examples{
# Chemin vers un dossier temporaire
tmp_dir <- tempdir()

# Chemin vers un dossier contenant des archives simulÃ©es
dossier_archives <- system.file("extdata", "test_data", "test_adezip", package = "pmeasyr")

# DÃ©compresser en fonction du finess, annÃ©e et mois du 
# fichier med d'une archive out
 adezip('123456789', 2016, 2, 
        path = dossier_archives,
        liste = 'med',
        pathto = tmp_dir,
        type = "out")
 
dir(tmp_dir)

# DÃ©compresser plusieurs types de fichiers d'une archive in
 adezip('123456789', 2016, 2, 
        path = dossier_archives,
        liste = c('med','rapss', 'ano'),
        pathto = tmp_dir,
        type = "in")
        
dir(tmp_dir)

# Utilisation avec un noyau de paramtÃ¨res
p <- noyau_pmeasyr(
       finess = '123456789',
       annee  = 2016,
       mois   = 12,
       path   = dossier_archives,
       progress = FALSE
       )

adezip(p, type = "in", pathto = tmp_dir)
dir(tmp_dir)
# Modification d'un paramÃ¨tre du noyau
adezip(p, mois = 11, type = "in",  pathto = tmp_dir)
dir(tmp_dir)

# Pour une mÃªme pÃ©riode (annÃ©e/mois), il peut y avoir plusieurs archives si 
# il y a eu plusieurs envois. Par exemple il y a deux version de l'archive
# out pour la pÃ©riode 2017.10 dans notre exemple simulÃ©
dir(dossier_archives, pattern = "2017\\\\.10.*out\\\\.zip")

 # Lorsque l'arguement `recent` est `TRUE` alors la fonction adezip 
 # sÃ©lectionne automatiquement l'archive la plus rÃ©cente
 adezip(123456789, 2017, 10,
        path = dossier_archives,
        liste = 'med',
        pathto = tmp_dir,
        type = "out") 
 dir(tmp_dir, pattern = "med")
 
 # Si l'arguement `recent` est `FALSE` alors l'utilisateur est invitÃ©
 # Ã  choisir
 \dontrun{
 adezip(123456789, 2017, 10,
        path = dossier_archives,
        liste = 'rsa',
        pathto = tmp_dir,
        recent = FALSE,
        type = "out")
 dir(tmp_dir, pattern = "rsa")
 }

# DÃ©zipper les logs
\dontrun{
adezip(p, type = "out", liste = c('chainage.log', 'comp.log', 'log'))
}

}
\seealso{
\code{\link{adezip2}}, \code{\link{astat}}, \code{\link{adelete}},
utiliser un noyau de parametres avec \code{\link{noyau_pmeasyr}}

\code{\link[utils:unzip]{utils::unzip()}}
}
\author{
G. Pressiat
}
